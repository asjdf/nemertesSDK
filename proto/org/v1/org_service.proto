syntax = "proto3";
package org.v1;

import "google/api/annotations.proto";
import "org/v1/org.proto";
import "user/v1/user.proto";

option go_package = "github.com/asjdf/nemertesSDK/gen/proto/org/v1;orgV1";

service OrgService {
  rpc CreateOrg(CreateOrgRequest) returns (CreateOrgResponse) {
    // CreateOrg creates an org.
    option (google.api.http) = {
      post: "/gapi/org/v1/create"
      body: "*"
    };
  }
  rpc GetOrgList(GetOrgListRequest) returns (GetOrgListResponse) {
    // GetOrgList returns a list of orgs that the user is a member of.
    option (google.api.http) = {get: "/gapi/org/v1/list"};
  }
  rpc GetOrgMembers(GetOrgMembersRequest) returns (GetOrgMembersResponse) {
    // GetOrgMembers returns a list of members of the org.
    option (google.api.http) = {get: "/gapi/org/v1/members"};
  }

  rpc CreateTeam(CreateTeamRequest) returns (CreateTeamResponse) {
    // CreateTeam creates a team.
    option (google.api.http) = {
      post: "/gapi/team/v1/create"
      body: "*"
    };
  }
  rpc GetTeamList(GetTeamListRequest) returns (GetTeamListResponse) {
    // GetTeamList returns a list of teams that the user is a member of.
    option (google.api.http) = {get: "/gapi/team/v1/list"};
  }
  rpc GetTeamInfo(GetTeamInfoRequest) returns (GetTeamInfoResponse) {
    // GetTeamInfo returns the team info.
    option (google.api.http) = {get: "/gapi/team/v1/info"};
  }
  rpc UpdateTeamInfo(UpdateTeamInfoRequest) returns (UpdateTeamInfoResponse) {
    // EditTeamInfo edits the team info.
    option (google.api.http) = {
      put: "/gapi/team/v1/info"
      body: "*"
    };
  }
  rpc GetTeamMembers(GetTeamMembersRequest) returns (GetTeamMembersResponse) {
    // GetTeamMembers returns a list of members of the team.
    option (google.api.http) = {get: "/gapi/team/v1/members"};
  }
}

message CreateOrgRequest {
  Org org = 1;
}
message CreateOrgResponse {
  Org org = 1;
}

message GetOrgListRequest {
  string userId = 1; // if userId is empty, it will return all orgs
}
message GetOrgListResponse {
  repeated Org orgs = 1;
}

message OrgMemberDetail {
  OrgMember member = 1;
  user.v1.User user = 2;
}
message GetOrgMembersRequest {
  string orgId = 1; // if orgId is empty, it will return current org members from auth info
}
message GetOrgMembersResponse {
  repeated OrgMemberDetail member = 1;
}

message CreateTeamRequest {
  Team team = 1;
}
message CreateTeamResponse {
  Team team = 1;
}

message GetTeamListRequest {
  string userId = 1; // if userId is empty, it will return all teams
}
message GetTeamListResponse {
  repeated Team teams = 1;
}

message GetTeamInfoRequest {
  string id = 1; // team id
}
message GetTeamInfoResponse {
  Team team = 1;
}

message UpdateTeamInfoRequest {
  Team team = 1;
}
message UpdateTeamInfoResponse {
  Team team = 1;
}

message TeamMemberDetail {
  TeamMember member = 1;
  user.v1.User user = 2;
}
message GetTeamMembersRequest {
  string teamId = 1;
}
message GetTeamMembersResponse {
  repeated TeamMemberDetail member = 1;
}